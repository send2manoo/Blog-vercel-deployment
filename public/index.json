[{"content":"hello hiking\n","permalink":"https://ml-decoder.github.io/posts/test-post/arch/","summary":"hello hiking","title":"Arch"},{"content":"Mongo DB \u0026lt;!DOCTYPE html\u0026gt; \u0026lt;html lang=\u0026#34;en\u0026#34;\u0026gt; \u0026lt;head\u0026gt; \u0026lt;meta charset=\u0026#34;utf-8\u0026#34; /\u0026gt; \u0026lt;title\u0026gt;Example HTML5 Document\u0026lt;/title\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;p\u0026gt;Test\u0026lt;/p\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; #include \u0026lt;stdio.h\u0026gt; int main() { int i, space, rows, k = 0; printf(\u0026#34;Enter the number of rows: \u0026#34;); scanf(\u0026#34;%d\u0026#34;, \u0026amp;rows); for (i = 1; i \u0026lt;= rows; ++i, k = 0) { for (space = 1; space \u0026lt;= rows - i; ++space) { printf(\u0026#34; \u0026#34;); } while (k != 2 * i - 1) { printf(\u0026#34;* \u0026#34;); ++k; } printf(\u0026#34;\\n\u0026#34;); } return 0; } code practise CI/CD Pipeline Github CI/CD Pipeline\nHow to Setup a CI/CD Pipeline with GitHub Actions and AWS\nCI/CD Continuous integration\nAutomate to run builds, tests and integrate into code branch(github).\nContinuous delivery\nAutomate to deploy our code to UAT then manually triggered to AWS\nContinuous Deployment\nAutomate to deploy our code to UAT(User Acceptance Testing) to AWS\n","permalink":"https://ml-decoder.github.io/posts/mongodb/mongodb/","summary":"Mongo DB \u0026lt;!DOCTYPE html\u0026gt; \u0026lt;html lang=\u0026#34;en\u0026#34;\u0026gt; \u0026lt;head\u0026gt; \u0026lt;meta charset=\u0026#34;utf-8\u0026#34; /\u0026gt; \u0026lt;title\u0026gt;Example HTML5 Document\u0026lt;/title\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;p\u0026gt;Test\u0026lt;/p\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; #include \u0026lt;stdio.h\u0026gt; int main() { int i, space, rows, k = 0; printf(\u0026#34;Enter the number of rows: \u0026#34;); scanf(\u0026#34;%d\u0026#34;, \u0026amp;rows); for (i = 1; i \u0026lt;= rows; ++i, k = 0) { for (space = 1; space \u0026lt;= rows - i; ++space) { printf(\u0026#34; \u0026#34;); } while (k != 2 * i - 1) { printf(\u0026#34;* \u0026#34;); ++k; } printf(\u0026#34;\\n\u0026#34;); } return 0; } code practise CI/CD Pipeline Github CI/CD Pipeline","title":"MongoDB"}]